#include <iostream>
#include <vector>
#include <utility> 
#include <map> 
#include <queue> 
#include <stack>
#include <functional>
#include <conio.h>
#include <chrono>
#include <iomanip>

#include "coverage.h"
using namespace std;
#define SIZE_M 23
#define SIZE_N 23
//Cases of Grid Inputs
/*
0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 1
0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 
0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0
0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1
0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1
1 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0
1 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0
1 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1
0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 1 1 0 0 0
0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0
0 0 0 1 0 1 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0
1 1 0 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 1 0 0
1 1 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 1 0 
1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0
*/
/*
1 1 1 1 1 1 0 0 0 1 1 1 1 1
1 1 1 1 1 0 0 0 0 0 1 1 1 1
0 0 0 0 0 0 0 1 0 0 0 0 1 1
0 1 0 0 1 1 1 1 1 0 0 0 0 0
1 1 0 0 1 1 1 1 1 0 1 0 0 0
0 1 0 0 1 1 1 1 1 0 0 0 0 0
0 0 0 0 1 1 1 1 1 1 0 0 1 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1
*/
/*
0 0 0 1 1 1 1 0 0 0
0 0 0 1 0 0 1 0 0 0
0 0 0 1 0 0 1 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 1 1 1 0
0 0 0 0 0 0 0 0 0 1
0 0 0 0 0 0 0 0 0 1
0 0 0 0 1 0 1 0 0 0
0 0 0 0 1 0 1 0 0 0
0 0 0 0 1 1 1 0 0 0
*/
/*
0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0
0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 1 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0
1 1 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 
1 1 0 0 0 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0
1 1 0 0 1 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0
1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 
1 1 0 0 0 0 0 0 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 
0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1
0 1 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 1 0 0 0 0 0
0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 1
0 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 1 1 1 1
0 1 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 
0 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0
0 1 1 1 1 1 1 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0
0 1 1 1 1 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 
0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0
0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 1 1 1 0 
1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 0 
0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0
0 1 0 0 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 0 1 0 0 
1 1 0 1 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0
*/
/*
1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  
1 1 1 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 
1 1 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 0 0 1 0 1 0
1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 1 0  
0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0  
0 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1  
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1  
1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0
1 1 1 1 1 1 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 1 
0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0
1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0
1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 
1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0  
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1  
1 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1
0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  
1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
1 1 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1
*/
int main(int argc, const char * argv[]){
	clock_t  startT, endT;
	startT = clock();
	
    vector<vector <int> > grid(SIZE_M ,vector<int>(SIZE_N ));
  
	vector<vector <int> > map(SIZE_M ,vector<int>(SIZE_N ));
	/*for (int i = 0; i < SIZE_M; i++)
	{
		for (int j = 0; j < SIZE_M; j++)
		{
			 map[i][j]=0;
		}
	}*/
	for(int i=0; i<SIZE_M; i++)
	{
		for(int j=0; j<SIZE_N; j++)
		{
			cin >> map[i][j];
			
		}
	}
    
    
    int cols = SIZE_M;
    int rows = SIZE_N;
    for(int i=0; i < cols; i++){
        for(int j=0; j < rows; j++){
            grid[i][j]=map[i][j];
        }
    }
    
    endT = clock();
	double time_taken = double(endT - startT) / double(CLOCKS_PER_SEC);
	cout << "Reading Time :" << time_taken<<endl;
    //initialized
    
    //ADD START
    Node start(0,0);
    //start.col =0;
    //start.row =0;
    start.step= PathStep;
    //grid[start.row][start.col]=PathStep;
    

  //vector<Node> path =  CoverageSprial(start, grid); // Sprial script
    vector<Node> path =  CoveragePlowing(start, grid); // Plowing script
    
    
    cout<<"result  "<<endl;
    
    printPathMap(grid, path);
    printPathNode(path);
    
    return 0;
}